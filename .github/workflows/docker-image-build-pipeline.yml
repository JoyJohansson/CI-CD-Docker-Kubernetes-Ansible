name: CI/CD for Nginx Build and Deploy

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug GitHub Secrets
        run: |
          echo "GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}"
          echo "GHCR_PAT is set: ${{ secrets.GHCR_PAT != '' }}"

      - name: Extract Version from Tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Test Docker Image
        run: |
          docker buildx build --load --no-cache -t ghcr.io/joyjohansson/ci-cd-docker-kubernetes-ansible/my-nginx:$VERSION .

          docker run -d --rm -p 8080:80 --name test-nginx ghcr.io/joyjohansson/ci-cd-docker-kubernetes-ansible/my-nginx:$VERSION
          sleep 5

          # Test 1: Container should start
          if ! docker ps | grep -q test-nginx; then
            echo "Test failed: Container did not start!"
            docker logs test-nginx
            exit 1
          fi

          # Test 2: Should return HTTP 200
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Test failed: Nginx did not serve the expected response!"
            docker logs test-nginx
            exit 1
          fi

          # Test 3: Check if index.html contains expected content
          EXPECTED_CONTENT="CI/CD Test - Fruity Edition"
          ACTUAL_CONTENT=$(curl -s http://localhost:8080)

          if [[ "$ACTUAL_CONTENT" != *"$EXPECTED_CONTENT"* ]]; then
            echo "Test failed: index.html does not contain expected content!"
            exit 1
          fi

          # Test 4: Ensure an invalid page returns 404
          ERROR_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/notfound)
          if [ "$ERROR_RESPONSE" -ne 404 ]; then
            echo "Test failed: Nginx did not return 404 for a non-existent page!"
            exit 1
          fi

          echo "All tests passed: Nginx is running, serving correct content, and handling errors properly."
          docker stop test-nginx


      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/joyjohansson/ci-cd-docker-kubernetes-ansible/my-nginx:${{ env.VERSION }}

