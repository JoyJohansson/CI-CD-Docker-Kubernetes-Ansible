- name: Rolling update for Nginx deployment
  hosts: localhost  # Running on the local machine
  connection: local
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: no

  vars:
    image: "{{ lookup('env', 'IMAGE') }}"
    container_name: "nginx"
    ghcr_username: "{{ lookup('env', 'USERNAME') }}"
    ghcr_token: "{{ lookup('env', 'MY_GITHUB_TOKEN') }}"
    repository_name: "ghcr.io/joyjohansson/ci-cd-docker-kubernetes-ansible/my-nginx"
    app_port: "80"

  tasks:
    - name: Login to GitHub Container Registry (GHCR)
      community.docker.docker_login:
        username: "{{ ghcr_username }}"
        password: "{{ ghcr_token }}"
        registry_url: ghcr.io

    - name: Check if the container exists
      community.docker.docker_container_info:
        name: "{{ container_name }}"
      register: container_info

    - name: Stop and remove existing Nginx container if running
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
      when: container_info.exists and container_info.container.State.Running

    - name: Remove old Nginx Docker image
      ansible.builtin.shell: |
        if [ -n "{{ repository_name }}" ]; then
          docker images "{{ repository_name }}" -q | xargs -r docker rmi --force
        fi
      ignore_errors: yes
      changed_when: false  # Prevent unnecessary changes in Ansible reports

    - name: Pull the latest version of the Nginx image
      community.docker.docker_image:
        name: "{{ lookup('env', 'IMAGE') | default('ghcr.io/joyjohansson/ci-cd-docker-kubernetes-ansible/my-nginx:v2.0.6') }}"
        source: pull

    - name: Debug Variables
      ansible.builtin.debug:
        msg:
          - "       .-\"\"\"\"\"-."
          - "      /        \\"
          - "     |  🍎 🍊 🍋  |  Welcome to the Kubernetes Fruit Salad!"
          - "     |  🍉 🍇 🍓  |"
          - "      \\  🍌 🍍  /"
          - "       '-.....-'"
          - ""
          - " 🥄 Mixing containers like a fresh fruit bowl! 🥄"
          - ""
          - " 🍎 Repository Name: {{ repository_name }}"
          - " 🍌 Image Name: {{ image }}"
          - ""
          - "🚀 Ready to serve a container full of flavour!"

    - name: Start the new Nginx container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ image }}"
        state: started
        ports:
          - "{{ app_port }}:{{ app_port }}"
        restart_policy: always  # Ensures the container restarts if it stops

